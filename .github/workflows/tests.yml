name: Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]  # macos-latest, windows-latest
        #python-version: ["3.6", "3.7", "3.8", "3.9"]
        include:
        - os: ubuntu-latest
          path: ~/.cache/pip
        #- os: macos-latest
        #  path: ~/Library/Caches/pip
        #- os: windows-latest
        #  path: ~\AppData\Local\pip\Cache
    env:
      OS: ${{ matrix.os }}
      #PYTHON: ${{ matrix.python-version }}

    defaults:
      run:
        shell: bash

    #name: Python ${{ matrix.python-version }} on OS ${{ matrix.os }}
    name: OS ${{ matrix.os }}
    steps:

    - name: Acquire sources
      uses: actions/checkout@v2

    #- name: Setup Python
    #  uses: actions/setup-python@v2
    #  with:
    #    python-version: ${{ matrix.python-version }}
    #    architecture: x64

    - name: Setup GStreamer
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install python3 python3-venv python3-gst-1.0 python3-gi python3-tz
        sudo apt-get install gstreamer1.0-tools gstreamer1.0-alsa gstreamer1.0-plugins-good

    - uses: actions/cache@v2
      with:
        path: ${{ matrix.path }}
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
        restore-keys: |
         ${{ runner.os }}-pip-

    - name: Run tests
      run: |
        pip install .[test]
        pytest -vvv tests

    - name: Generate coverage report
      #if: matrix.python-version == '3.9'
      run: |
        pytest --cov=saraswati tests
        coverage xml

    - name: Upload coverage to Codecov
      #if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: false
